create schema "thirdsemesterexam";
set search_path to "thirdsemesterexam"


/* User */
create domain d_username varchar(256);
create domain d_password varchar(256);
create domain d_role varchar(10);

create table Users(
	username d_username,
	password d_password NOT NULL,
	role d_role NOT NULL,
	PRIMARY KEY (username)
);

select * from Users;
drop table Users;

/* Customer */
create domain d_address varchar(256);
create domain d_postcode char(4);
create domain d_firstName varchar(256);
create domain d_lastName varchar(256);
create domain d_email varchar(256);
create domain d_phoneNumber varchar(15);
create domain d_rating varchar(5);

create table Customer(
	username d_username,
	address d_address NOT NULL,
	postcode d_postcode NOT NULL,
	firstName d_firstName NOT NULL,
	lastName d_lastName NOT NULL,
	email d_email NOT NULL,
	phoneNumber d_phoneNumber NOT NULL,
	rating d_rating,
	PRIMARY KEY (username),
	FOREIGN KEY (username) references Users(username) on delete cascade
);

select * from Customer
drop table Customer


/* BookSale */
create domain d_title varchar(256);
create domain d_author varchar(256);
create domain d_edition varchar(30);
create domain d_condition varchar(10);
create domain d_subject varchar(50);
create domain d_image varchar(256);
create domain d_price decimal(10, 2);
create domain d_hardCopy boolean;
create domain d_description varchar(255);
create domain d_saleId int;

create table BookSale(
	title d_title NOT NULL,
	author d_author NOT NULL,
	edition d_edition NOT NULL,
	condition d_condition NOT NULL,
	subject d_subject NOT NULL,
	image d_image NOT NULL,
	price d_price NOT NULL,
	hardCopy d_hardCopy NOT NULL,
	description d_description,
	username d_username NOT NULL,
	foreign key(username) references Users(username) on delete cascade,
	bookSaleID serial,
	PRIMARY KEY (bookSaleID)
);

select * from BookSale;
drop table BookSale

/*  Wishlist */
create table Wishlist(
	bookSaleId serial,
	username d_username NOT NULL,
	primary key (bookSaleId),
	foreign key(bookSaleId) references BookSale(bookSaleId) on delete cascade,
	foreign key(username) references Users(username) on delete cascade
);

select * from Wishlist
drop table Wishlist

/* Hardcoded User */
select * from Users
insert into Users (username, password, role) values ('Magic Fish', '1234', 'Customer');
insert into Users (username, password, role) values ('Magic Moderator', '4321', 'Moderator');
insert into Users (username, password, role) values ('Magic Administrator', '3421', 'Admin');


/* Hardcoded Customer */
select * from Customer
insert into Customer (userName, address, postcode, firstName, lastName, email, phoneNumber, rating) values ('Magic Fish', 'Fish Town 18', '8700', 'Fish', 'Man', 'Fish@Fishmail.com', 12345678, 5);

/* Hardcoded Moderator */
select * from Moderator
insert into Moderator (userName) values ('Magic Moderator');

/* Hardcoded Adminstrator */
select * from Administrator
insert into Administrator (userName) values ('Magic Administrator');


/* Hardcoded BookSale */
select * from BookSale
insert into BookSale (title, author, edition, condition, subject, image, price, hardCopy, description , username) values('Fish Book', 'Sonny Fish Man', 'First', 'Mint', 'Fish', 'Fish Path', 80000, true, 'insert long as description', 'Magic Fish');


/* Hardcoded Wishlist */
select * from Wishlist
insert into Wishlist(booksaleId, username) values(0001, 'Magic Fish');

